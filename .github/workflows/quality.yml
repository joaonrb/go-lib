name: Quality
run-name: ${{ github.actor }} is checking code quality
on: [push]
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
          - "1.21"
          - "1.22"
          - "1.23"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod download
      - name: Test with Go
        run: go test -coverpkg=./... -race -short -coverprofile cov.out -v -json ./... | tee TestResults-${{ matrix.go-version }}.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json

  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
          - "1.21"
          - "1.22"
          - "1.23"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod download
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout 3m --config .golangci.yml
